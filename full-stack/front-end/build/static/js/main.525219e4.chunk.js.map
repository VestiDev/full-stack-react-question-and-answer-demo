{"version":3,"sources":["modules/api.js","modules/questions/requests/updateQuestion.js","modules/questions/requests/deleteQuestion.js","modules/questions/requests/fetchQuestion.js","modules/questions/requests/fetchQuestions.js","modules/questions/slices/questions.js","modules/questions/slices/index.js","modules/questions/components/selectors.js","modules/questions/components/CreateAnswer.js","modules/questions/components/Answers.js","modules/questions/components/Upvotes.js","modules/questions/components/Question.js","modules/questions/components/Questions.js","modules/questions/requests/createQuestion.js","modules/questions/components/CreateQuestion.js","modules/homepage/HomePage.js","modules/router/components/AppRouter.js","modules/router/components/Navigation.js","modules/bootup/store.js","App.js","reportWebVitals.js","index.js"],"names":["API","method","path","payload","a","url","options","mode","headers","body","JSON","stringify","fetch","response","json","updateQuestion","createAsyncThunk","question","id","questions","map","_id","deleteQuestion","questionId","fetchQuestion","fetchQuestions","addQuestions","state","action","loading","items","reduce","acc","setLoading","removeQuestion","questionsSlice","createSlice","name","initialState","reducers","addAnswer","answer","answers","upvote","upvotes","extraReducers","builder","addCase","fulfilled","pending","actions","reducer","getQuestion","CreateAnswer","useState","newAnswer","setNewAnswer","dispatch","useDispatch","useSelector","style","display","flexDirection","TextField","multiline","placeholder","rows","value","onChange","e","target","Button","onClick","uuid","text","Answers","Object","values","Typography","variant","length","Card","padding","Upvotes","stopPropagation","Question","params","useParams","navigate","useNavigate","initialized","setInitialization","useEffect","Container","Questions","Grid","container","spacing","item","xs","cursor","createQuestion","questionText","insertedId","CreateQuestion","setQuestionText","getQuestions","getLoading","HomePage","latestQuestions","AppRouter","element","Navigation","Toolbar","justifyContent","color","textShadow","store","configureStore","questionReducers","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.525219e4.chunk.js","sourcesContent":["const basePath = 'http://localhost:5000';\n\nexport const API = async(method, path, payload) => {\n  const url = `${basePath}${path}`;\n\n  const options = {\n    method,\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  if (payload) options.body = JSON.stringify(payload);\n\n  const response = await fetch(url, options);\n  return response.json();\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { API } from '../../api'\n\nexport const updateQuestion = createAsyncThunk(\n  'questions/updateQuestion',\n  async (question) => {\n    const response = await API('PUT', `/question/${question.id}`, {\n      question,\n    });\n\n    return response.questions.map((question) => {\n      question.id = question._id;\n      delete question._id;\n      return question;\n    });\n  }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { API } from '../../api'\n\nexport const deleteQuestion = createAsyncThunk(\n  'questions/deleteQuestion',\n  async (questionId) => {\n    await API('DELETE', `/question/${questionId}`);\n    return questionId;\n  }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { API } from '../../api'\n\nexport const fetchQuestion = createAsyncThunk(\n  'questions/fetchQuestion',\n  async (questionId) => {\n    const response = await API('GET', `/question/${questionId}`);\n    return response.questions.map((question) => {\n      question.id = question._id;\n      delete question._id;\n      return question;\n    });\n  }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { API } from '../../api'\n\nexport const fetchQuestions = createAsyncThunk(\n  'questions/fetchQuestions',\n  async () => {\n    const response = await API('GET', '/questions');\n    return response.questions.map((question) => {\n      question.id = question._id;\n      delete question._id;\n      return question;\n    });\n  }\n);\n\nexport const deleteQuestion = createAsyncThunk(\n  'questions/deleteQuestion',\n  async (questionId) => {\n    await API('DELETE', `/question/${questionId}`);\n    return questionId;\n  }\n);\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { updateQuestion } from \"../requests/updateQuestion\";\nimport { deleteQuestion } from \"../requests/deleteQuestion\";\nimport { fetchQuestion } from \"../requests/fetchQuestion\";\nimport { fetchQuestions } from \"../requests/fetchQuestions\";\n\nconst initialState = {\n  items: {},\n  loading: false,\n};\n\nconst addQuestions = (state, action) => {\n  state.loading = false;\n  state.items = {\n    ...state.items,\n    ...action.payload.reduce((acc, question) => {\n      acc[question.id] = question;\n      return acc;\n    }, {}),\n  };\n};\n\nconst setLoading = (state) => {\n  state.loading = true;\n};\n\nconst removeQuestion = (state, action) => {\n  delete state.items[action.payload];\n};\n\nexport const questionsSlice = createSlice({\n  name: 'questions',\n  initialState,\n  reducers: {\n    addQuestions,\n    addAnswer: (state, action) => {\n      const { questionId, answer } = action.payload;\n      const answers = state.items[questionId].answers || {};\n      answers[answer.id] = answer;\n      state.items[questionId].answers = answers;\n    },\n    removeQuestion,\n    upvote: (state, action) => {\n      const { questionId } = action.payload;\n\n      const upvotes = (state.items[questionId].upvotes || 0) + 1;\n      state.items[questionId].upvotes = upvotes;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(updateQuestion.fulfilled, addQuestions);\n    builder.addCase(updateQuestion.pending, setLoading);\n\n    builder.addCase(fetchQuestion.fulfilled, addQuestions);\n    builder.addCase(fetchQuestion.pending, setLoading);\n\n    builder.addCase(fetchQuestions.fulfilled, addQuestions);\n    builder.addCase(fetchQuestions.pending, setLoading);\n\n    builder.addCase(deleteQuestion.fulfilled, removeQuestion);\n    builder.addCase(deleteQuestion.pending, setLoading);\n  },\n});\n\nexport const questionActions = questionsSlice.actions;\nexport const questions = questionsSlice.reducer;\n","import { questions, questionActions } from \"./questions\";\n\nconst reducers = { questions };\n\nexport {\n  reducers,\n  questionActions,\n};\n","export const getQuestion = (questionId) => (state) => {\n  return state.questions.items[questionId];\n}\n","import { TextField, Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport { updateQuestion } from \"../requests/updateQuestion\";\n\nimport { getQuestion } from \"./selectors\";\n\nexport const CreateAnswer = ({ questionId }) => {\n  const [newAnswer, setNewAnswer] = useState('');\n  const dispatch = useDispatch();\n  const question = useSelector(getQuestion(questionId));\n\n  const addAnswer = () => {\n    const id = uuid();\n    const answer = {\n      id,\n      text: newAnswer,\n    };\n\n    dispatch(updateQuestion({\n      ...question,\n      answers: {\n        ...question.answers,\n        [id]: answer,\n      },\n    }));\n\n    setNewAnswer('');\n  }\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <TextField\n        multiline\n        placeholder={\"Answer this question\"}\n        rows={4}\n        value={newAnswer}\n        onChange={(e) => setNewAnswer(e.target.value || '')}\n      />\n      <Button\n        onClick={() => addAnswer()}\n      >\n        Submit\n      </Button>\n    </div>\n  );\n}\n","import { Typography, Card } from \"@mui/material\";\nimport { useSelector } from 'react-redux';\n\nimport { CreateAnswer } from \"./CreateAnswer\";\nimport { getQuestion } from \"./selectors\";\n\nexport const Answers = ({ questionId }) => {\n  const question = useSelector(getQuestion(questionId));\n  const answers = Object.values(question.answers || {});\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <Typography variant=\"h2\">Answers:</Typography>\n      {\n        answers.length ? null : (\n          <Typography variant=\"h4\">No answers yet.</Typography>\n        )\n      }\n      {\n        answers.map((answer) => (\n          <Card style={{ padding: 12 }} key ={answer.id}>\n            <Typography variant=\"h5\">{answer.text}</Typography>\n          </Card>\n        ))\n      }\n      <CreateAnswer questionId={questionId} />\n    </div>\n  );\n}\n","import { Button } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { updateQuestion } from \"../requests/updateQuestion\";\n\nexport const Upvotes = ({ question }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Button\n      onClick={(e) => {\n        e.stopPropagation();\n\n        dispatch(updateQuestion({\n          ...question,\n          upvotes: (question.upvotes || 0) + 1,\n        }));\n      }}\n    >▲ {question.upvotes || 0}</Button>\n  );\n}\n","import { Button, Container, Typography } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { deleteQuestion } from \"../requests/deleteQuestion\";\nimport { Answers } from \"./Answers\";\nimport { Upvotes } from \"./Upvotes\";\nimport { fetchQuestion } from \"../requests/fetchQuestion\";\nimport { useEffect, useState } from \"react\";\n\nconst getQuestion = (questionId) => (state) => {\n  return state.questions.items[questionId];\n}\n\nexport const Question = () => {\n  const params = useParams();\n  const dispatch = useDispatch();\n  const { questionId } = params;\n  const question = useSelector(getQuestion(questionId));\n  const navigate = useNavigate();\n  const [initialized, setInitialization] = useState(false);\n\n  useEffect(() => {\n    if (initialized) return false;\n    dispatch(fetchQuestion(questionId));\n    setInitialization(true);\n  }, [dispatch, initialized, setInitialization, questionId]);\n\n  if (!question) {\n    return (\n      <Container>\n        <h2>That question doesn't exist.</h2>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Typography variant=\"h1\">{question.text}</Typography>\n      <Upvotes question={question} />\n      <Button\n        onClick={() => {\n          dispatch(deleteQuestion(question.id));\n          navigate('/');\n        }}\n      >\n        Delete\n      </Button>\n      <hr  />\n      <Answers questionId={question.id} />\n    </Container>\n  );\n}\n","import { Card, Grid, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router\";\nimport { Upvotes } from \"./Upvotes\";\n\n// used in MyQuestions and in HomePage\nexport const Questions = ({ questions }) => {\n  const navigate = useNavigate();\n\n  return (\n    <div>\n      <Typography variant=\"h2\">Questions</Typography>\n      <Grid container spacing={2}>\n        {\n          questions.map((question) => {\n            return (\n              <Grid\n                item\n                xs={4}\n                key={question.id}\n                style={{ cursor: 'pointer' }}\n                onClick={() => navigate(`/question/${question.id}`)\n                }\n              >\n                <Card style={{ padding: 12, flexDirection: 'row', display: 'flex'}}>\n                  <Upvotes question={question} />\n                  <Typography variant=\"h6\">{question.text}</Typography>\n                </Card>\n              </Grid>\n            );\n          })\n        }\n      </Grid>\n    </div>\n  );\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { API } from '../../api'\n\nexport const createQuestion = createAsyncThunk(\n  'questions/createQuestion',\n  async ({ questionText, navigate }) => {\n    const response = await API('POST', '/question', {\n      question: {\n        text: questionText,\n      },\n    });\n\n    navigate(`/question/${response.insertedId}`);\n  }\n);\n","import { Typography, TextField, Button, Container } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\n\nimport { createQuestion } from \"../requests/createQuestion\";\n\nexport const CreateQuestion = () => {\n  const [questionText, setQuestionText] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const saveQuestion = () => {\n    dispatch(createQuestion({ questionText, navigate }));\n    setQuestionText('');\n  };\n\n  return (\n    <Container style={{ display: 'flex', flexDirection: 'column' }}>\n      <Typography variant=\"h2\">Ask a Question</Typography>\n      <TextField\n        multiline\n        rows={4}\n        value={questionText}\n        onChange={(e) => setQuestionText(e.target.value || '')}\n      />\n      <Button\n        onClick={() => saveQuestion()}\n      >\n        Submit\n      </Button>\n    </Container>\n  );\n}\n","import { Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Questions } from '../questions';\nimport { fetchQuestions } from '../questions/requests/fetchQuestions';\n\nconst getQuestions = (state) => {\n  return Object.values(state.questions.items);\n};\n\nconst getLoading = (state) => {\n  return state.questions.loading;\n};\n\nexport const HomePage = () => {\n  const latestQuestions = useSelector(getQuestions);\n  const loading = useSelector(getLoading);\n  const [initialized, setInitialization] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (initialized) return false;\n    dispatch(fetchQuestions());\n    setInitialization(true);\n  }, [dispatch, initialized, setInitialization]);\n\n  if (loading) {\n    return (\n      <div>\n        <Typography variant=\"h1\">Latest Questions</Typography>\n        <Typography variant=\"h4\">Loading...</Typography>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <Typography variant=\"h1\">Latest Questions</Typography>\n      <Questions questions={latestQuestions}/>\n    </div>\n  );\n}\n","import {\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport { HomePage } from '../../homepage';\nimport { Question, CreateQuestion } from '../../questions';\n\nexport const AppRouter = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/question/:questionId\" element={<Question />} />\n      <Route path=\"/create-question\" element={<CreateQuestion />} />\n      <Route\n        path=\"*\"\n        element={\n          <main>\n            <p>There's nothing here!</p>\n          </main>\n        }\n      />\n    </Routes>\n  );\n};\n","import { Typography, Toolbar, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router\";\n\nexport const Navigation = () => {\n  const navigate = useNavigate();\n  return (\n    <Toolbar style={{ justifyContent: 'space-between' }}>\n      <Typography\n        variant=\"h4\"\n        color=\"primary\"\n        style={{\n          textShadow: '1px 1px black, 2px 2px #fff',\n          cursor: 'pointer',\n        }}\n        onClick={() => navigate('/')}\n      >\n        ‽&nbsp;\n        <i>Q&A World</i>\n      </Typography>\n      <div>\n        <Button\n          onClick={() => navigate('/create-question')}\n          variant=\"contained\"\n        >Ask Question</Button>\n      </div>\n    </Toolbar>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { reducers as questionReducers } from '../questions'\n\nexport const store = configureStore({\n  reducer: {\n    ...questionReducers,\n  },\n});\n","import { Container } from \"@mui/material\";\nimport {\n  BrowserRouter,\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\nimport { AppRouter, Navigation } from './modules/router';\nimport { store } from './modules/bootup/store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Container>\n          <Navigation />\n          <AppRouter />\n        </Container>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}